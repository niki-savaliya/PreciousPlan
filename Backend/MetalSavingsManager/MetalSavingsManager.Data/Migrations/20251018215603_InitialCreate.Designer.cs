// <auto-generated />
using System;
using MetalSavingsManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MetalSavingsManager.Data.Migrations
{
    [DbContext(typeof(BankingDbContext))]
    [Migration("20251018215603_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("MetalSavingsManager.Data.Model.Deposit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SavingsPlanId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SavingsPlanId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.MetalPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetalType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MetalPrices");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.QuarterlyFee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FeeDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SavingsPlanId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SavingsPlanId");

                    b.ToTable("QuarterlyFees");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.SavingsPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SavingsPlans");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SavingsPlanId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SavingsPlanId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.Deposit", b =>
                {
                    b.HasOne("MetalSavingsManager.Data.Model.SavingsPlan", "SavingsPlan")
                        .WithMany("Deposits")
                        .HasForeignKey("SavingsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavingsPlan");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.QuarterlyFee", b =>
                {
                    b.HasOne("MetalSavingsManager.Data.Model.SavingsPlan", "SavingsPlan")
                        .WithMany("QuarterlyFees")
                        .HasForeignKey("SavingsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavingsPlan");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.SavingsPlan", b =>
                {
                    b.HasOne("MetalSavingsManager.Data.Model.User", "User")
                        .WithMany("SavingsPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.Transaction", b =>
                {
                    b.HasOne("MetalSavingsManager.Data.Model.SavingsPlan", "SavingsPlan")
                        .WithMany("Transactions")
                        .HasForeignKey("SavingsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavingsPlan");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.SavingsPlan", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("QuarterlyFees");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MetalSavingsManager.Data.Model.User", b =>
                {
                    b.Navigation("SavingsPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
